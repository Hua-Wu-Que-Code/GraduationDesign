{"remainingRequest":"/Users/huawuque/IdeaProjects/GraduationDesign/commonView/node_modules/babel-loader/lib/index.js!/Users/huawuque/IdeaProjects/GraduationDesign/commonView/src/utils/request.js","dependencies":[{"path":"/Users/huawuque/IdeaProjects/GraduationDesign/commonView/src/utils/request.js","mtime":1678451855469},{"path":"/Users/huawuque/IdeaProjects/GraduationDesign/commonView/node_modules/cache-loader/dist/cjs.js","mtime":1678361537427},{"path":"/Users/huawuque/IdeaProjects/GraduationDesign/commonView/node_modules/babel-loader/lib/index.js","mtime":1678361537906}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHJvdXRlciBmcm9tICJAL3JvdXRlciI7CnZhciByZXF1ZXN0ID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiAiaHR0cDovL2xvY2FsaG9zdDo5OTk5IiwKICB0aW1lb3V0OiA1MDAwMAp9KTsgLy8g6K+35rGC55m95ZCN5Y2V77yM5aaC5p6c6K+35rGC5Zyo55m95ZCN5Y2V6YeM6Z2i77yM5bCG5LiN5Lya6KKr5oum5oiq5qCh6aqM5p2D6ZmQCgp2YXIgd2hpdGVVcmxzID0gWyIvdXNlci9sb2dpbiIsICcvdXNlci9yZWdpc3RlciddOyAvLyByZXF1ZXN0IOaLpuaIquWZqAovLyDlj6/ku6Xoh6ror7fmsYLlj5HpgIHliY3lr7nor7fmsYLlgZrkuIDkupvlpITnkIYKLy8g5q+U5aaC57uf5LiA5YqgdG9rZW7vvIzlr7nor7fmsYLlj4LmlbDnu5/kuIDliqDlr4YKCnJlcXVlc3QuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICBjb25maWcuaGVhZGVyc1snQ29udGVudC1UeXBlJ10gPSAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04JzsgLy8g5Y+W5Ye6c2Vzc2lvblN0b3JhZ2Xph4zpnaLnvJPlrZjnmoTnlKjmiLfkv6Hmga8KCiAgdmFyIHVzZXJKc29uID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgidXNlciIpOwoKICBpZiAoIXdoaXRlVXJscy5pbmNsdWRlcyhjb25maWcudXJsKSkgewogICAgLy8g5qCh6aqM6K+35rGC55m95ZCN5Y2VCiAgICBpZiAoIXVzZXJKc29uKSB7CiAgICAgIGNvbnNvbGUubG9nKCLlv6vljrvnmbvpmYYiKTsKICAgICAgcm91dGVyLnB1c2goIi9sb2dpbiIpOwogICAgfSBlbHNlIHsKICAgICAgdmFyIHVzZXIgPSBKU09OLnBhcnNlKHVzZXJKc29uKTsKICAgICAgY29uZmlnLmhlYWRlcnNbJ0F1dGhvcml6YXRpb24nXSA9IHVzZXIudG9rZW47IC8vIOiuvue9ruivt+axguWktAogICAgfQogIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7IC8vIHJlc3BvbnNlIOaLpuaIquWZqAovLyDlj6/ku6XlnKjmjqXlj6Plk43lupTlkI7nu5/kuIDlpITnkIbnu5PmnpwKCnJlcXVlc3QuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICB2YXIgcmVzID0gcmVzcG9uc2UuZGF0YTsgLy8g5aaC5p6c5piv6L+U5Zue55qE5paH5Lu2CgogIGlmIChyZXNwb25zZS5jb25maWcucmVzcG9uc2VUeXBlID09PSAnYmxvYicpIHsKICAgIHJldHVybiByZXM7CiAgfSAvLyDlhbzlrrnmnI3liqHnq6/ov5Tlm57nmoTlrZfnrKbkuLLmlbDmja4KCgogIGlmICh0eXBlb2YgcmVzID09PSAnc3RyaW5nJykgewogICAgcmVzID0gcmVzID8gSlNPTi5wYXJzZShyZXMpIDogcmVzOwogIH0gLy8g6aqM6K+BdG9rZW4KCgogIGlmIChyZXMuY29kZSA9PT0gJzQwMScpIHsKICAgIGNvbnNvbGUuZXJyb3IoInRva2Vu6L+H5pyf77yM6YeN5paw55m75b2VIik7CiAgICByb3V0ZXIucHVzaCgiL2xvZ2luIik7CiAgfQoKICByZXR1cm4gcmVzOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICBjb25zb2xlLmxvZygnZXJyJyArIGVycm9yKTsgLy8gZm9yIGRlYnVnCgogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOwpleHBvcnQgZGVmYXVsdCByZXF1ZXN0Ow=="},{"version":3,"sources":["/Users/huawuque/IdeaProjects/GraduationDesign/commonView/src/utils/request.js"],"names":["axios","router","request","create","baseURL","timeout","whiteUrls","interceptors","use","config","headers","userJson","sessionStorage","getItem","includes","url","console","log","push","user","JSON","parse","token","error","Promise","reject","response","res","data","responseType","code"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAE,uBADgB;AAEzBC,EAAAA,OAAO,EAAE;AAFgB,CAAb,CAAhB,C,CAKA;;AACA,IAAMC,SAAS,GAAG,CAAC,aAAD,EAAgB,gBAAhB,CAAlB,C,CAEA;AACA;AACA;;AACAJ,OAAO,CAACK,YAAR,CAAqBL,OAArB,CAA6BM,GAA7B,CAAiC,UAAAC,MAAM,EAAI;AACvCA,EAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,gCAAjC,CADuC,CAGvC;;AACA,MAAIC,QAAQ,GAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAf;;AACA,MAAI,CAACP,SAAS,CAACQ,QAAV,CAAmBL,MAAM,CAACM,GAA1B,CAAL,EAAqC;AAAG;AACpC,QAAG,CAACJ,QAAJ,EAAc;AACVK,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAhB,MAAAA,MAAM,CAACiB,IAAP,CAAY,QAAZ;AACH,KAHD,MAGO;AACH,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWV,QAAX,CAAX;AACAF,MAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAkCS,IAAI,CAACG,KAAvC,CAFG,CAE4C;AAClD;AACJ;;AACD,SAAOb,MAAP;AACH,CAfD,EAeG,UAAAc,KAAK,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAjBD,E,CAmBA;AACA;;AACArB,OAAO,CAACK,YAAR,CAAqBmB,QAArB,CAA8BlB,GAA9B,CACI,UAAAkB,QAAQ,EAAI;AACR,MAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB,CADQ,CAER;;AACA,MAAIF,QAAQ,CAACjB,MAAT,CAAgBoB,YAAhB,KAAiC,MAArC,EAA6C;AACzC,WAAOF,GAAP;AACH,GALO,CAMR;;;AACA,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzBA,IAAAA,GAAG,GAAGA,GAAG,GAAGP,IAAI,CAACC,KAAL,CAAWM,GAAX,CAAH,GAAqBA,GAA9B;AACH,GATO,CAUR;;;AACA,MAAIA,GAAG,CAACG,IAAJ,KAAa,KAAjB,EAAwB;AACpBd,IAAAA,OAAO,CAACO,KAAR,CAAc,cAAd;AACAtB,IAAAA,MAAM,CAACiB,IAAP,CAAY,QAAZ;AACH;;AACD,SAAOS,GAAP;AACH,CAjBL,EAkBI,UAAAJ,KAAK,EAAI;AACLP,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQM,KAApB,EADK,CACsB;;AAC3B,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CArBL;AAyBA,eAAerB,OAAf","sourcesContent":["import axios from 'axios'\nimport router from \"@/router\";\n\nconst request = axios.create({\n    baseURL: \"http://localhost:9999\",\n    timeout: 50000\n})\n\n// 请求白名单，如果请求在白名单里面，将不会被拦截校验权限\nconst whiteUrls = [\"/user/login\", '/user/register']\n\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\nrequest.interceptors.request.use(config => {\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\n\n    // 取出sessionStorage里面缓存的用户信息\n    let userJson = sessionStorage.getItem(\"user\")\n    if (!whiteUrls.includes(config.url)) {  // 校验请求白名单\n        if(!userJson) {\n            console.log(\"快去登陆\")\n            router.push(\"/login\")\n        } else {\n            let user = JSON.parse(userJson);\n            config.headers['Authorization'] = user.token;  // 设置请求头\n        }\n    }\n    return config\n}, error => {\n    return Promise.reject(error)\n});\n\n// response 拦截器\n// 可以在接口响应后统一处理结果\nrequest.interceptors.response.use(\n    response => {\n        let res = response.data;\n        // 如果是返回的文件\n        if (response.config.responseType === 'blob') {\n            return res\n        }\n        // 兼容服务端返回的字符串数据\n        if (typeof res === 'string') {\n            res = res ? JSON.parse(res) : res\n        }\n        // 验证token\n        if (res.code === '401') {\n            console.error(\"token过期，重新登录\")\n            router.push(\"/login\")\n        }\n        return res;\n    },\n    error => {\n        console.log('err' + error) // for debug\n        return Promise.reject(error)\n    }\n)\n\n\nexport default request\n\n"]}]}